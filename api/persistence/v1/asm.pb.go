// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/persistence/v1/asm.proto

package persistence

import (
	reflect "reflect"
	sync "sync"

	v1 "go.temporal.io/api/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ASMInstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceState                 *v1.DataBlob               `protobuf:"bytes,1,opt,name=instance_state,json=instanceState,proto3" json:"instance_state,omitempty"`
	InitialVersionedTransition    *VersionedTransition       `protobuf:"bytes,2,opt,name=initial_versioned_transition,json=initialVersionedTransition,proto3" json:"initial_versioned_transition,omitempty"`
	LastUpdateVersionedTransition *VersionedTransition       `protobuf:"bytes,3,opt,name=last_update_versioned_transition,json=lastUpdateVersionedTransition,proto3" json:"last_update_versioned_transition,omitempty"`
	Tasks                         []*ASMInstanceInfo_ASMTask `protobuf:"bytes,4,rep,name=tasks,proto3" json:"tasks,omitempty"`
	AsmType                       string                     `protobuf:"bytes,5,opt,name=asm_type,json=asmType,proto3" json:"asm_type,omitempty"`
}

func (x *ASMInstanceInfo) Reset() {
	*x = ASMInstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_server_api_persistence_v1_asm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASMInstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASMInstanceInfo) ProtoMessage() {}

func (x *ASMInstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_asm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASMInstanceInfo.ProtoReflect.Descriptor instead.
func (*ASMInstanceInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_asm_proto_rawDescGZIP(), []int{0}
}

func (x *ASMInstanceInfo) GetInstanceState() *v1.DataBlob {
	if x != nil {
		return x.InstanceState
	}
	return nil
}

func (x *ASMInstanceInfo) GetInitialVersionedTransition() *VersionedTransition {
	if x != nil {
		return x.InitialVersionedTransition
	}
	return nil
}

func (x *ASMInstanceInfo) GetLastUpdateVersionedTransition() *VersionedTransition {
	if x != nil {
		return x.LastUpdateVersionedTransition
	}
	return nil
}

func (x *ASMInstanceInfo) GetTasks() []*ASMInstanceInfo_ASMTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ASMInstanceInfo) GetAsmType() string {
	if x != nil {
		return x.AsmType
	}
	return ""
}

// This one is data store in the queue
type ASMTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataBlob *v1.DataBlob `protobuf:"bytes,1,opt,name=data_blob,json=dataBlob,proto3" json:"data_blob,omitempty"`
	SubAsmId string       `protobuf:"bytes,2,opt,name=sub_asm_id,json=subAsmId,proto3" json:"sub_asm_id,omitempty"`
	// in case sub asm id is reused
	InitialVersionedTransition *VersionedTransition `protobuf:"bytes,3,opt,name=initial_versioned_transition,json=initialVersionedTransition,proto3" json:"initial_versioned_transition,omitempty"`
	VersionedTransition        *VersionedTransition `protobuf:"bytes,4,opt,name=versioned_transition,json=versionedTransition,proto3" json:"versioned_transition,omitempty"`
	RootAsmType                string               `protobuf:"bytes,5,opt,name=root_asm_type,json=rootAsmType,proto3" json:"root_asm_type,omitempty"`
}

func (x *ASMTaskInfo) Reset() {
	*x = ASMTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_server_api_persistence_v1_asm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASMTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASMTaskInfo) ProtoMessage() {}

func (x *ASMTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_asm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASMTaskInfo.ProtoReflect.Descriptor instead.
func (*ASMTaskInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_asm_proto_rawDescGZIP(), []int{1}
}

func (x *ASMTaskInfo) GetDataBlob() *v1.DataBlob {
	if x != nil {
		return x.DataBlob
	}
	return nil
}

func (x *ASMTaskInfo) GetSubAsmId() string {
	if x != nil {
		return x.SubAsmId
	}
	return ""
}

func (x *ASMTaskInfo) GetInitialVersionedTransition() *VersionedTransition {
	if x != nil {
		return x.InitialVersionedTransition
	}
	return nil
}

func (x *ASMTaskInfo) GetVersionedTransition() *VersionedTransition {
	if x != nil {
		return x.VersionedTransition
	}
	return nil
}

func (x *ASMTaskInfo) GetRootAsmType() string {
	if x != nil {
		return x.RootAsmType
	}
	return ""
}

type ASMInstanceInfo_ASMTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data                []byte               `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	VersionedTransition *VersionedTransition `protobuf:"bytes,2,opt,name=versioned_transition,json=versionedTransition,proto3" json:"versioned_transition,omitempty"`
}

func (x *ASMInstanceInfo_ASMTask) Reset() {
	*x = ASMInstanceInfo_ASMTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_server_api_persistence_v1_asm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASMInstanceInfo_ASMTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASMInstanceInfo_ASMTask) ProtoMessage() {}

func (x *ASMInstanceInfo_ASMTask) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_asm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASMInstanceInfo_ASMTask.ProtoReflect.Descriptor instead.
func (*ASMInstanceInfo_ASMTask) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_asm_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ASMInstanceInfo_ASMTask) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ASMInstanceInfo_ASMTask) GetVersionedTransition() *VersionedTransition {
	if x != nil {
		return x.VersionedTransition
	}
	return nil
}

var File_temporal_server_api_persistence_v1_asm_proto protoreflect.FileDescriptor

var file_temporal_server_api_persistence_v1_asm_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x73, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x2c,
	0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x68, 0x73, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xee, 0x04, 0x0a, 0x0f, 0x41, 0x53, 0x4d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x4b, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x02, 0x68, 0x00, 0x12, 0x7d, 0x0a, 0x1c,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x02, 0x68, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x68, 0x00, 0x12, 0x55, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x53, 0x4d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x53, 0x4d, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x02, 0x68, 0x00, 0x12, 0x1d, 0x0a, 0x08,
	0x61, 0x73, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x73, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x02, 0x68, 0x00, 0x1a, 0x91, 0x01, 0x0a, 0x07, 0x41,
	0x53, 0x4d, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x02, 0x68, 0x00, 0x12, 0x6e, 0x0a, 0x14,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x13, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x68, 0x00, 0x22, 0x89, 0x03, 0x0a, 0x0b, 0x41, 0x53, 0x4d,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x62, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6c, 0x6f, 0x62, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x6c, 0x6f, 0x62, 0x42, 0x02, 0x68, 0x00, 0x12, 0x20, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f,
	0x61, 0x73, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x41, 0x73, 0x6d, 0x49, 0x64, 0x42, 0x02, 0x68, 0x00, 0x12, 0x7d, 0x0a, 0x1c, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x02, 0x68, 0x00, 0x12, 0x6e, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x68, 0x00, 0x12, 0x26,
	0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x61, 0x73, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x41, 0x73, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x02, 0x68, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x6f, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x6c, 0x2e, 0x69, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_temporal_server_api_persistence_v1_asm_proto_rawDescOnce sync.Once
	file_temporal_server_api_persistence_v1_asm_proto_rawDescData = file_temporal_server_api_persistence_v1_asm_proto_rawDesc
)

func file_temporal_server_api_persistence_v1_asm_proto_rawDescGZIP() []byte {
	file_temporal_server_api_persistence_v1_asm_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_persistence_v1_asm_proto_rawDescData = protoimpl.X.CompressGZIP(file_temporal_server_api_persistence_v1_asm_proto_rawDescData)
	})
	return file_temporal_server_api_persistence_v1_asm_proto_rawDescData
}

var file_temporal_server_api_persistence_v1_asm_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_temporal_server_api_persistence_v1_asm_proto_goTypes = []interface{}{
	(*ASMInstanceInfo)(nil),         // 0: temporal.server.api.persistence.v1.ASMInstanceInfo
	(*ASMTaskInfo)(nil),             // 1: temporal.server.api.persistence.v1.ASMTaskInfo
	(*ASMInstanceInfo_ASMTask)(nil), // 2: temporal.server.api.persistence.v1.ASMInstanceInfo.ASMTask
	(*v1.DataBlob)(nil),             // 3: temporal.api.common.v1.DataBlob
	(*VersionedTransition)(nil),     // 4: temporal.server.api.persistence.v1.VersionedTransition
}
var file_temporal_server_api_persistence_v1_asm_proto_depIdxs = []int32{
	3, // 0: temporal.server.api.persistence.v1.ASMInstanceInfo.instance_state:type_name -> temporal.api.common.v1.DataBlob
	4, // 1: temporal.server.api.persistence.v1.ASMInstanceInfo.initial_versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	4, // 2: temporal.server.api.persistence.v1.ASMInstanceInfo.last_update_versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	2, // 3: temporal.server.api.persistence.v1.ASMInstanceInfo.tasks:type_name -> temporal.server.api.persistence.v1.ASMInstanceInfo.ASMTask
	3, // 4: temporal.server.api.persistence.v1.ASMTaskInfo.data_blob:type_name -> temporal.api.common.v1.DataBlob
	4, // 5: temporal.server.api.persistence.v1.ASMTaskInfo.initial_versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	4, // 6: temporal.server.api.persistence.v1.ASMTaskInfo.versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	4, // 7: temporal.server.api.persistence.v1.ASMInstanceInfo.ASMTask.versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_temporal_server_api_persistence_v1_asm_proto_init() }
func file_temporal_server_api_persistence_v1_asm_proto_init() {
	if File_temporal_server_api_persistence_v1_asm_proto != nil {
		return
	}
	file_temporal_server_api_persistence_v1_hsm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_temporal_server_api_persistence_v1_asm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASMInstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_server_api_persistence_v1_asm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASMTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_server_api_persistence_v1_asm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASMInstanceInfo_ASMTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_temporal_server_api_persistence_v1_asm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_persistence_v1_asm_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_persistence_v1_asm_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_persistence_v1_asm_proto_msgTypes,
	}.Build()
	File_temporal_server_api_persistence_v1_asm_proto = out.File
	file_temporal_server_api_persistence_v1_asm_proto_rawDesc = nil
	file_temporal_server_api_persistence_v1_asm_proto_goTypes = nil
	file_temporal_server_api_persistence_v1_asm_proto_depIdxs = nil
}
